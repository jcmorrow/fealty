#!/usr/bin/env ruby

$: << File.expand_path("../../lib/", __FILE__)

require "awesome_print"
require "byebug"
require "ruby-prof"
require "cards"
require "player"
require "priority"
require "strategy"
require "strategy_generator"
require "strategy_generation"

def log_strategy(strategy)
  puts <<-DOC

  Buy Strategy
  ============
  #{strategy.buy_priorities.map(&:to_sym)}
  DOC

  puts <<-DOC

  Play Strategy
  ============
  #{strategy.play_priorities.map(&:to_sym)}
  DOC
end

shitty_smithy_village = Strategy.new(
  buy_priorities: [
    :copper,
    :silver,
    :duchy,
    { province: { permanent: true } },
    { smithy: { permanent: true } },
    { village: { permanent: true } },
  ],
  play_priorities: [:smithy, :village],
)
best_candidate = shitty_smithy_village

log_strategy(best_candidate)

player = Player.new(best_candidate)
30.times { player.take_turn }
puts "START: " + player.points.to_s

1_000.times do
  generation = StrategyGeneration.from_strategy(best_candidate, 100)
  result = generation.evolve
  best_candidate = result[0]
  print result[1].to_s + " "
end

log_strategy(best_candidate)

# result = RubyProf.profile do
#   ...
# end

# print a graph profile to profile.html
# printer = RubyProf::GraphHtmlPrinter.new(result)
# printer.print(STDOUT, min_percent: 5)
